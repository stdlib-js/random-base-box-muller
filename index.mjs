// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@v0.1.1-esm/index.mjs";import{factory as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sin@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-cos@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-two-pi@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pi@v0.1.1-esm/index.mjs";function b(t){var e,s;return e=!0,function(){var n,i,r,o;if(e){do{n=t(),i=t()}while(0===n);return r=u(-2*j(n)),s=r*v(o=f*i),e=!1,r*c(o)}return e=!0,s}}var y=v(g);function x(t){return u(-2*j(t))*y}function w(t){return u(-2*j(t))*v(f*t)}function N(u){var j,c,v,f;if(f={copy:!0},arguments.length){if(!n(u))throw new TypeError(h("invalid argument. Must provide an object. Value: `%s`.",u));if(o(u,"copy")&&(f.copy=u.copy,!r(u.copy)))throw new TypeError(h("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",u.copy));if(o(u,"prng")){if(!i(u.prng))throw new TypeError(h("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",u.prng));j=u.prng}else if(o(u,"state")){if(f.state=u.state,!d(u.state))throw new TypeError(h("invalid option. `%s` option must be a Uint32Array. Option: `%s`.","state",u.state))}else if(o(u,"seed")&&(f.seed=u.seed,void 0===u.seed))throw new TypeError(h("invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.","seed",u.seed))}return void 0===f.state?void 0===j?j=(v=m(f)).normalized:f.seed=null:j=(v=m(f)).normalized,c=b(j),t(c,"NAME","box-muller"),null===f.seed?(t(c,"seed",null),t(c,"seedLength",null)):(e(c,"seed",g),e(c,"seedLength",y)),u&&u.prng?(s(c,"state",a(null),l),t(c,"stateLength",null),t(c,"byteLength",null),t(c,"toJSON",a(null))):(s(c,"state",L,E),e(c,"stateLength",N),e(c,"byteLength",M),t(c,"toJSON",O)),t(c,"PRNG",j),o(j,"MIN")?(t(c,"MIN",x(j.MIN)),t(c,"MAX",w(j.MIN))):(t(c,"MIN",null),t(c,"MAX",null)),c;function g(){return v.seed}function y(){return v.seedLength}function N(){return v.stateLength}function M(){return v.byteLength}function L(){return v.state}function E(t){v.state=t}function O(){var t={type:"PRNG"};return t.name=c.NAME,t.state=p(v.state),t.params=[],t}}var M=N();t(M,"factory",N);export{M as default,N as factory};
//# sourceMappingURL=index.mjs.map
